<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VosExtension</name>
    </assembly>
    <members>
        <member name="T:DAQRI.AbstractCameraPreview">
            <summary>
            Extend this class for any camera previews.
            </summary>
        </member>
        <member name="T:DAQRI.AbstractCameraPreview.FitMethod">
            <summary>
            If the texture aspect ratio doesn't match the camera aspect ratio,
            this determines how the texture is altered to match the camera aspect ratio.
            </summary>
        </member>
        <member name="F:DAQRI.AbstractCameraPreview.FitMethod.AlterTransformScale">
            <summary>
            The transform scale will be adjusted to match the camera aspect ratio.
            </summary>
        </member>
        <member name="F:DAQRI.AbstractCameraPreview.FitMethod.AlterTransformSize">
            <summary>
            The transform size will be adjusted to match the camera aspect ratio.
            </summary>
        </member>
        <member name="F:DAQRI.AbstractCameraPreview.fitMethod">
            <summary>
            If the texture aspect ratio doesn't match the camera aspect ratio,
            this determines how the texture is altered to match the camera aspect ratio.
            </summary>
        </member>
        <member name="M:DAQRI.AbstractCameraPreview.NativeToUnityTextureCorrection(UnityEngine.UI.RawImage,System.Boolean)">
            <summary>
            Changes the UVRect of the raw image to compensate for different coordinate systems between
            the Unity editor and the DAQRI Smart Device. This ensures the raw image is drawn in a consistent orientation,
            regardless of whether the app is running in the editor or on a device.
            </summary>
            <param name="rawImage">Raw image.</param>
            <param name="isEditor">Pass as <c>true</c> if the application is running in the Unity editor.</param>
        </member>
        <member name="M:DAQRI.AbstractCameraPreview.ResizeToMatchCameraAspectRatio(UnityEngine.Vector2)">
            <summary>
            Resizes the rect transform to match the aspect ratio of the camera.
            The scale or size is altered depending on the fitMethod property.
            </summary>
            <param name="cameraDimensions">Camera dimensions.</param>
        </member>
        <member name="T:DAQRI.ColorCameraPreviewAbstraction">
            <summary>
            This script handles the rendering of a live video feed from the color camera.
            To use, drag the color camera preview prefab into your scene.
            </summary>
        </member>
        <member name="T:DAQRI.DepthCameraPreviewAbstraction">
            <summary>
            This script handles the rendering of a live video feed from the depth camera.
            To use, drag the depth camera preview prefab into your scene.
            </summary>
        </member>
        <member name="M:DAQRI.Input.ReticleInputModule.SetPointerCurrentRaycast">
            <summary>Sets the pointer current raycast on the pointer event data property</summary>
        </member>
        <member name="M:DAQRI.Input.ReticleInputModule.HandleReticleExitAndIdle(UnityEngine.GameObject,System.Single)">
            <summary>
            If the reticle is not already idle, this sets the reticle to idle, clears the
            click target, and handles the pointer exit. If the reticle is already idle, this does
            nothing.
            </summary>
        </member>
        <member name="M:DAQRI.Input.ReticleInputModule.HandleGameObjectSelection(UnityEngine.GameObject)">
            <summary>
            Handles the game object selection and logic for InputFields. Must be called
            every frame that an InputField should remain selected.
            </summary>
            <param name="selectHandler">Select handler.</param>
        </member>
        <member name="T:DAQRI.Input.IPointerDwellHandler">
            <summary>
            Implement this to respond to reticle dwell progression.
            </summary>
        </member>
        <member name="M:DAQRI.Input.IPointerDwellHandler.OnPointerDwellProgress(System.Single)">
            <summary>
            Implement this to respond to reticle dwell progression. The dwell fraction value
            is clamped between zero and one, and indicates the fraction of dwell that has been
            completed towards triggering a pointer click. The fraction completed is calculated for
            each frame, so no value is ever guaranteed (including zero and one). The only guarantee
            is that the values will lie between zero and one, inclusive. You should use
            IPointerClickHandler and IPointerExitHandler to handle resetting any changes you make to
            your objects, since this method is not called on a pointer exit or after a pointer click.
            </summary>
            <param name="fractionCompleted">
            A value between zero and one indicating the fraction of
            dwell that has been completed.
            </param>
        </member>
        <member name="F:DAQRI.Input.Reticle.Constants.Chase.LerpAmount">
            <summary>
            This is how for to lerp each second from current location to the new location.
            The result is when the delta between the current to the target is large it will move
            fast, when the distance is small it will be more gradual. The main point of this is to
            prevent jitter when the reticle is near the target position, and allow to move great
            distances quickly. See: https://gist.github.com/Hamcha/6096905 or Unity3D standard assets
            SmoothFollow for an example on smooth chase/follow logic.
            </summary>
        </member>
        <member name="E:DAQRI.Input.Reticle.OnDwellComplete">
            <summary>Event to execute when reticle dwell has completed.</summary>
        </member>
        <member name="M:DAQRI.Input.Reticle.SetStateAndTarget(DAQRI.Input.Reticle.State,UnityEngine.GameObject,System.Single)">
            <summary>Sets the reticle's state and target information.</summary>
            <param name="state">State.</param>
            <param name="target">Target.</param>
            <param name="newTargetDistance">Target distance.</param>
        </member>
        <member name="M:DAQRI.Input.Reticle.TriggerAudio(UnityEngine.AudioClip)">
            <summary>
            Sent by the Reticle.controller from events [Reticle.Hover, Reticle.Dwell(frame 0
            and end)].
            </summary>
            <param name="audioClip">audio to play</param>
        </member>
        <member name="M:DAQRI.Input.Reticle.StartUpdateDwellProgress">
            <summary>Sent by the Reticle.controller from events [Reticle.Dwell(frame 0)]</summary>
        </member>
        <member name="M:DAQRI.Input.Reticle.StopUpdateDwellProgress">
            <summary>Sent by the Reticle.controller from events [Reticle.Idle, Reticle.Hover]</summary>
        </member>
        <member name="M:DAQRI.Input.Reticle.DwellComplete">
            <summary>Sent by the Reticle.controller from events [Reticle.Dwell(frame end)]</summary>
        </member>
        <member name="T:DAQRI.Sensors.DataFormat">
            <summary>
            Data Format Enumeration gives the format in which the data is given by various devices
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DataFormat.UnknownFormat">
            <summary>Bad image format</summary>
        </member>
        <member name="F:DAQRI.Sensors.DataFormat.IMUData">
            <summary>IMU</summary>
        </member>
        <member name="F:DAQRI.Sensors.DataFormat.VIOIMUData">
            <summary>VIPS</summary>
        </member>
        <member name="F:DAQRI.Sensors.DataFormat.VIOTrackerData">
            <summary>VTRK</summary>
        </member>
        <member name="F:DAQRI.Sensors.DataFormat.GrayScale">
            <summary>LUM8</summary>
        </member>
        <member name="F:DAQRI.Sensors.DataFormat.RGB">
            <summary>RGB8</summary>
        </member>
        <member name="F:DAQRI.Sensors.DataFormat.RGBA">
            <summary>RGBA</summary>
        </member>
        <member name="F:DAQRI.Sensors.DataFormat.YUYV">
            <summary>YUYV</summary>
        </member>
        <member name="F:DAQRI.Sensors.DataFormat.Depth">
            <summary>Z16</summary>
        </member>
        <member name="F:DAQRI.Sensors.DataFormat.Lum16">
            <summary>LUMW</summary>
        </member>
        <member name="M:DAQRI.Sensors.Device.startDeviceNativeCall(System.Int32)">
            <summary>
            Starts the Device (native call)
            </summary>
        </member>
        <member name="M:DAQRI.Sensors.Device.stopDeviceNativeCall">
            <summary>
            Stops the Device (native call)
            </summary>
        </member>
        <member name="M:DAQRI.Sensors.IMU.ValidateDeviceType">
            <summary>
            Checks the current device type and logs a warning if thermal is not supported.
            </summary>
        </member>
        <member name="P:DAQRI.Sensors.DepthDevice.HistogramOnOffStatus">
            <summary>Gets/Sets the DepthDevice current render type (Histogram/Raw)</summary>
            <returns>
            <c>true</c> if histogram rendertype histogram is enabled, and <c>false</c> if raw
            rendertype is enabled
            </returns>
        </member>
        <member name="M:DAQRI.Sensors.DepthDevice.SetCameraResolution(DAQRI.Sensors.DeviceCameraPreset)">
            <summary>Set depth resolution to RGB_480p</summary>
        </member>
        <member name="P:DAQRI.Sensors.RGBDevice.AutoExposureStatus">
            <summary>Gets/Sets Auto Exposure on off status.</summary>
        </member>
        <member name="P:DAQRI.Sensors.RGBDevice.AutoWhiteBalanceStatus">
            <summary>Gets/Sets Auto White Balance on off status.</summary>
        </member>
        <member name="P:DAQRI.Sensors.RGBDevice.RGBDeviceHDOnOffStatus">
            <summary>Gets color camra HD on off status.</summary>
            <returns>The RGBDevice HD On Off status.</returns>
        </member>
        <member name="P:DAQRI.Sensors.RGBDevice.ExposureValue">
            <summary>Gets/Sets Auto Exposure on off status.</summary>
            <returns>The Auto Exposure On Off status.</returns>
        </member>
        <member name="P:DAQRI.Sensors.RGBDevice.WhiteBalanceValue">
            <summary>Gets/Sets Auto White Balance on off status.</summary>
            <returns>The Auto White Balance On Off status.</returns>
        </member>
        <member name="P:DAQRI.Sensors.RGBDevice.CameraResolution">
            <summary>Set camera resolution to RGB_1080p, RGB_480p</summary>
        </member>
        <member name="M:DAQRI.Sensors.RGBDevice.SetAutoExposureNativeCall(System.Boolean)">
            <summary>Sets Auto Exposure of the Color camera (native call)</summary>
        </member>
        <member name="M:DAQRI.Sensors.RGBDevice.SetAutoWhiteBalanceNativeCall(System.Boolean)">
            <summary>Set White Balance Rate of the Color camera (native call)</summary>
        </member>
        <member name="M:DAQRI.Sensors.RGBDevice.SetExposureNativeCall(System.Int32)">
            <summary>Sets Auto Exposure of the Color camera (native call)</summary>
        </member>
        <member name="M:DAQRI.Sensors.RGBDevice.SetWhiteBalanceNativeCall(System.Int32)">
            <summary>Set White Balance Rate of the Color camera (native call)</summary>
        </member>
        <member name="M:DAQRI.Sensors.RGBDevice.UpdatePresetNativeCall(System.Int32)">
            <summary>Update Preset of the Device (native call)</summary>
        </member>
        <member name="P:DAQRI.Sensors.CameraDevice.RawByteSize">
            <summary>
            Set Raw Bytes Size of the data, Example : RGB = raw byte size is 3, Depth Camera
            Raw render format has raw byte size of 2
            </summary>
        </member>
        <member name="P:DAQRI.Sensors.CameraDevice.AspectRatio">
            <summary>Gets Aspect ratio of the camera device.</summary>
            <returns>The Aspect ratio of the camera device.</returns>
        </member>
        <member name="P:DAQRI.Sensors.CameraDevice.FieldOfView">
            <summary>Gets Field of View of the camera device.</summary>
            <returns>The Field of view of the camera device.</returns>
        </member>
        <member name="P:DAQRI.Sensors.CameraDevice.Texture">
            <summary>Gets Texture2D used for rendering of the camera feed.</summary>
            <returns>The Texture2D used for rendering of the camera feed.</returns>
        </member>
        <member name="P:DAQRI.Sensors.CameraDevice.Buffer">
            <summary>
            Gets Buffer of the camera device data in raw format size of the Buffer is
            calulated by width * height * raw_byte_size;
            </summary>
            <returns>The Buffer of the camera device data in raw format.</returns>
        </member>
        <member name="P:DAQRI.Sensors.CameraDevice.BufferSize">
            <summary>
            Gets Buffer Size of the camera device data size of the Buffer is calulated by
            width * height * raw_byte_size;
            </summary>
            <returns>The Buffer size of the camera device.</returns>
        </member>
        <member name="P:DAQRI.Sensors.CameraDevice.PosePosition">
            <summary>Gets Pose position of the camera device in relation to the VIO IMU.</summary>
            <returns>The Pose Position of the camera device in relation to the VIO IMU.</returns>
        </member>
        <member name="P:DAQRI.Sensors.CameraDevice.PoseRotation">
            <summary>Gets Pose Rotation of the camera device in relation to the VIO IMU.</summary>
            <returns>The Pose Rotation of the camera device in relation to the VIO IMU.</returns>
        </member>
        <member name="M:DAQRI.Sensors.CameraDevice.getParametersNativeCall(System.Int32[],System.Int32[])">
            <summary>Gets Parameter of the Device (width and height) (native call)</summary>
        </member>
        <member name="M:DAQRI.Sensors.CameraDevice.getPoseNativeCall(System.Single[],System.Single[])">
            <summary>Gets pose position and rotation of the Device from VIO IMU(native call)</summary>
        </member>
        <member name="M:DAQRI.Sensors.CameraDevice.setRenderEventTextureIDNativeCall(System.IntPtr)">
            <summary>Gets Texture ID from unity to native (native call)</summary>
        </member>
        <member name="M:DAQRI.Sensors.CameraDevice.getRenderEventNativeCall">
            <summary>Gets RenderEvent for texture (native call)</summary>
        </member>
        <member name="T:DAQRI.Sensors.VideoPlayerState">
            <summary>
            Video player state.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.STARTED">
            <summary>
            The started.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.NEW_FRAME">
            <summary>
            The new frame.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.FINISHED_PLAYBACK">
            <summary>
            The finished playback.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.STOPPED">
            <summary>
            The stopped.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.PAUSED">
            <summary>
            The paused.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.RESUMED">
            <summary>
            The resumed.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.SEEK">
            <summary>
            The seek.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.UNKNOWN_ERROR">
            <summary>
            The unknown error.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.FILE_PERMISSION_ERROR">
            <summary>
            The file permission error.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.FILE_FORMAT_ERROR">
            <summary>
            The file format error.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.VideoPlayerState.DECODING_ERROR">
            <summary>
            The decoding error.
            </summary>
        </member>
        <member name="T:DAQRI.Sensors.DeviceCameraControl">
            <summary>
            Enum for RGB device Controls.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DeviceCameraControl.WHITE_BALANCE">
            <summary>
            The white balance.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DeviceCameraControl.EXPOSURE">
            <summary>
            The exposure.
            </summary>
        </member>
        <member name="T:DAQRI.Sensors.DeviceCameraPreset">
            <summary>
            Enum for RGB camera preset
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DeviceCameraPreset.RGB_240p">
            <summary>
            rgb device preset for 240p.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DeviceCameraPreset.RGB_480p">
            <summary>
            rgb device preset for 480p.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DeviceCameraPreset.RGB_480p_WIDE">
            <summary>
            rgb device preset for 480p_WIDE.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DeviceCameraPreset.RGB_720p">
            <summary>
            rgb device preset for 720p.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DeviceCameraPreset.RGB_1080p">
            <summary>
            rgb device preset for 1080p.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DeviceCameraPreset.UNKNOWN">
            <summary>
            unknown rgb device preset.
            </summary>
        </member>
        <member name="T:DAQRI.Sensors.DeviceDepthRenderType">
            <summary>
            Enum for Depth device render type
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DeviceDepthRenderType.RAW">
            <summary>
            Depth device preset for raw data.
            </summary>
        </member>
        <member name="F:DAQRI.Sensors.DeviceDepthRenderType.HISTOGRAM">
            <summary>
            Depth device preset for histogram data.
            </summary>
        </member>
        <member name="M:DAQRI.Sensors.ThermalDevice.ValidateDeviceType">
            <summary>Checks the current device type and logs a warning if thermal is not supported.</summary>
        </member>
        <member name="T:DAQRI.UI.TextCapitalizationAbstractBehaviour">
            <summary>
            Text capitalization handles converting text to upper case.
            </summary>
        </member>
        <member name="T:DAQRI.UI.MenuListAutosizingBackgroundAbstractBehaviour">
            <summary>
            MenuList Auto Size script handles the auto size of the MenuList.
            </summary>
        </member>
        <member name="F:DAQRI.UI.MenuListAutosizingBackgroundAbstractBehaviour.heightFrom">
            <summary>
             heightFrom property is used to determine the top anchor point of first menu item
            </summary>
        </member>
        <member name="F:DAQRI.UI.MenuListAutosizingBackgroundAbstractBehaviour.verticalLayoutGroup">
            <summary>
            vertical LayoutGroup holds all the menu items in the menu list
            </summary>
        </member>
        <member name="T:DAQRI.UI.BluetoothUI">
            <summary>
            Displays a bluetooth icon to reflect the current network state.
            To udpate the sprites, comment out the HideInInspector tag and build.
            Then link the sprites in the inspector.
            Then read the HideInInspector tags and build again.
            This keeps the developer from altering the sprites being used on this object.
            </summary>
        </member>
        <member name="T:DAQRI.UI.SetTimeText">
            <summary>
            Sets the formatted system time on a required text component.
            </summary>
        </member>
        <member name="T:DAQRI.UI.WifiUI">
            <summary>
            Displays a WiFi icon to reflect the current network state.
            To udpate the sprites, comment out the HideInInspector tag and build.
            Then link the sprites in the inspector.
            Then read the HideInInspector tags and build again.
            This keeps the developer from altering the sprites being used on this object.
            </summary>
        </member>
        <member name="T:DAQRI.UI.BatteryUI">
            <summary>
            Displays a battery icon to reflect the current charge level.
            To udpate the sprites, comment out the HideInInspector tag and build.
            Then link the sprites in the inspector.
            Then read the HideInInspector tags and build again.
            This keeps the developer from altering the sprites being used on this object.
            </summary>
        </member>
        <member name="T:DAQRI.UI.SoftwareKeyboardHandlerAbstraction">
            <summary>
            Base class to show the software keyboard on dwell.
            </summary>
        </member>
        <member name="M:DAQRI.UI.SoftwareKeyboardHandlerAbstraction.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Show the software keyboard on dwell.
            </summary>
            <param name="eventData">Event data.</param>
        </member>
        <member name="M:DAQRI.UI.SoftwareKeyboardHandlerAbstraction.InitialText">
            <summary>
            Override this to provide initial text to show when the keyboard is launched.
            By default, no initial string is shown.
            </summary>
            <returns>The initial string for the keyboard.</returns>
        </member>
        <member name="T:DAQRI.UI.SoftwareKeyboardInputFieldHandlerAbstraction">
            <summary>
            Allows the use of the software keyboard with a Unity InputField.
            </summary>
        </member>
        <member name="M:DAQRI.UI.SoftwareKeyboardInputFieldHandlerAbstraction.OnKeyboardInputRecieved(System.String)">
            <summary>
            Update the input field with the entered text.
            </summary>
            <param name="input">Input.</param>
        </member>
        <member name="M:DAQRI.UI.SoftwareKeyboardInputFieldHandlerAbstraction.InitialText">
            <summary>
            Use the current string in the input field as the 
            initial text to show when the keyboard launches.
            </summary>
            <returns>The initial string for the keyboard.</returns>
        </member>
        <member name="T:DAQRI.UI.SoftwareKeyboardTextHandlerAbstraction">
            <summary>
            Allows the use of the software keyboard with a Unity Text component.
            </summary>
        </member>
        <member name="M:DAQRI.UI.SoftwareKeyboardTextHandlerAbstraction.OnKeyboardInputRecieved(System.String)">
            <summary>
            Update the text UI with the input string.
            </summary>
            <param name="input">Input.</param>
        </member>
        <member name="M:DAQRI.UI.SoftwareKeyboardTextHandlerAbstraction.InitialText">
            <summary>
            Use the current string of the Text component as the 
            initial text to show when the keyboard launches.
            </summary>
            <returns>The initial string for the keyboard.</returns>
        </member>
        <member name="T:DAQRI.UI.PanelAbstraction">
            <summary>
            A panel is a single page that holds UI content.
            To add UI elements to a panel, add your UI game objects as children of the panel in a scene.
            See PanelController for navigating between a series of panels.
            </summary>
        </member>
        <member name="F:DAQRI.UI.PanelAbstraction.pageNumber">
            <summary>
            The page number of this panel.
            The menu uses this to order the panels.
            </summary>
        </member>
        <member name="F:DAQRI.UI.PanelAbstraction.menuTitle">
            <summary>
            The title to be displayed in the menu when this panel appears.
            If left blank, the menu title will default to whatever its text was on start.
            </summary>
        </member>
        <member name="F:DAQRI.UI.PanelAbstraction.OnPanelAppear">
            <summary>
            The event to invoke when the panel is enabled.
            </summary>
        </member>
        <member name="F:DAQRI.UI.PanelAbstraction.OnPanelDisappear">
            <summary>
            The event to invoke when the panel is disabled.
            </summary>
        </member>
        <member name="T:DAQRI.UI.PanelControllerAbstractBehaviour">
            <summary>
            Provides functionality for navigating between a series of panels.
            See Panel for more information on individual panels.
            </summary>
        </member>
        <member name="F:DAQRI.UI.PanelControllerAbstractBehaviour.menuTitle">
            <summary>
            Use this public property to assign title text
            </summary>
        </member>
        <member name="M:DAQRI.UI.PanelControllerAbstractBehaviour.GoToNextPanel">
            <summary>
            Shows the next panel in the list and hides the current one.
            </summary>
        </member>
        <member name="M:DAQRI.UI.PanelControllerAbstractBehaviour.GoToNextPanel(UnityEngine.UI.Text)">
            <summary>
            Shows the next panel in the list and hides the current one.
            Has an optional text parameter to override the menu title.
            This parameter is useful if the menu title relies on runtime data.
            </summary>
        </member>
        <member name="M:DAQRI.UI.PanelControllerAbstractBehaviour.GoToPreviousPanel">
            <summary>
            Shows the previous panel in the list and hides the current one.
            </summary>
        </member>
        <member name="M:DAQRI.UI.PanelControllerAbstractBehaviour.JumpToPanelIndex(System.Int32)">
            <summary>
            Jumps to the panel at a given index in the list.
            </summary>
            <param name="panelIndex">Panel index in the list.</param>
        </member>
        <member name="M:DAQRI.UI.PanelControllerAbstractBehaviour.ResetState">
            <summary>
            Hides all panels except the first one.
            </summary>
        </member>
        <member name="M:DAQRI.UI.PanelControllerAbstractBehaviour.ShowPanelAtCurrentIndex(UnityEngine.UI.Text)">
            <summary>
            Shows the index of the panel at current.
            If overridden menu text is provided, that text will be displayed and assigned to the panel.
            </summary>
            <param name="overriddenMenuText">Overridden menu text.</param>
        </member>
        <member name="T:DAQRI.UI.MenuPageAbstraction">
            <summary>
            Provides page functionality to be used by the universal menu.
            </summary>
        </member>
        <member name="F:DAQRI.UI.MenuPageAbstraction.pageNumber">
            <summary>
            The page number.
            The menu uses this to sort the pages.
            </summary>
        </member>
        <member name="F:DAQRI.UI.MenuPageAbstraction.menuTitle">
            <summary>
            The title to be displayed in the menu when this page appears.
            If left blank, the menu title will default to whatever its text was on start.
            </summary>
        </member>
        <member name="F:DAQRI.UI.MenuPageAbstraction.OnPageAppear">
            <summary>
            The event to invoke when the page is enabled.
            </summary>
        </member>
        <member name="F:DAQRI.UI.MenuPageAbstraction.OnPageDisappear">
            <summary>
            The event to invoke when the page is disabled.
            </summary>
        </member>
        <member name="T:DAQRI.UI.UniversalMenuAbstraction">
            <summary>
            Provides functionality for navigating between a series of pages.
            </summary>
            <summary>
            Provides functionality for navigating between a series of pages.
            </summary>
        </member>
        <member name="P:DAQRI.UI.UniversalMenuAbstraction.Pages">
            <summary>
            Returns the menu page objects.
            The returned list is a copy, so altering the list will not affect the menu functionality.
            The pages contained in the list are not copies.
            </summary>
            <value>The page objects.</value>
        </member>
        <member name="M:DAQRI.UI.UniversalMenuAbstraction.SetNumberOfPages(System.Int32)">
            <summary>
            Creates or deletes page game objects to match the specified number of pages.
            </summary>
            <returns>A list of all the menu pages.</returns>
            <param name="numberOfPages">Desired number of pages.</param>
        </member>
        <member name="M:DAQRI.UI.UniversalMenuAbstraction.SetNextButtonActiveStates">
            <summary>
            Sets all next page buttons active except the last page.
            </summary>
        </member>
        <member name="M:DAQRI.UI.UniversalMenuAbstraction.UpdatePagesList">
            <summary>
            If you manually create pages at runtime, you must call this method
            in order for those pages to be used by this menu.
            Calling this is not necessary if you use the SetNumberOfPages method
            or you create the pages in edit mode.
            </summary>
        </member>
        <member name="M:DAQRI.UI.UniversalMenuAbstraction.GoToNextPage">
            <summary>
            Shows the next page in the list and hides the current one.
            </summary>
        </member>
        <member name="M:DAQRI.UI.UniversalMenuAbstraction.GoToNextPage(UnityEngine.UI.Text)">
            <summary>
            Shows the next page in the list and hides the current one.
            Has an optional text parameter to override the menu title.
            This parameter is useful if the menu title relies on runtime data.
            </summary>
        </member>
        <member name="M:DAQRI.UI.UniversalMenuAbstraction.GoToPreviousPage">
            <summary>
            Shows the previous page in the list and hides the current one.
            </summary>
        </member>
        <member name="M:DAQRI.UI.UniversalMenuAbstraction.JumpToPageIndex(System.Int32)">
            <summary>
            Jumps to the page at a given index in the list.
            </summary>
            <param name="panelIndex">Page index in the list.</param>
        </member>
        <member name="M:DAQRI.UI.UniversalMenuAbstraction.ResetState">
            <summary>
            Hides all panels except the first one.
            </summary>
        </member>
        <member name="M:DAQRI.UI.UniversalMenuAbstraction.ShowPageAtCurrentIndex(UnityEngine.UI.Text)">
            <summary>
            Shows the index of the panel at current.
            If overridden menu text is provided, that text will be displayed and assigned to the panel.
            </summary>
            <param name="overriddenMenuText">Overridden menu text.</param>
        </member>
        <member name="T:DAQRI.UI.MenuNavigationButtonAbstraction">
            <summary>
            The navigation button to work with the universal menu.
            </summary>
        </member>
        <member name="T:DAQRI.UI.BaseNavigationButton">
            <summary>
            Base navigation button for the deprecated and current versions
            of the universal menu.
            </summary>
        </member>
        <member name="M:DAQRI.UI.BaseNavigationButton.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Executes an action based on the button state.
            </summary>
            <param name="eventData">Event data.</param>
        </member>
        <member name="T:DAQRI.UI.PanelNavigationButtonAbstraction">
            <summary>
            The navigation button to work with the universal menu.
            </summary>
        </member>
        <member name="T:DAQRI.UI.MenuNextPageButtonAbstraction">
            <summary>
            Abstract class for the universal menu next button.
            </summary>
        </member>
        <member name="M:DAQRI.UI.MenuNextPageButtonAbstraction.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Move to the next page of the menu on a pointer click.
            </summary>
            <param name="eventData">Event data.</param>
        </member>
        <member name="T:DAQRI.DeviceType">
            <summary>
            This type contains values representing a DAQRI Smart Device.
            </summary>
        </member>
        <member name="F:DAQRI.DeviceType.DAQRISmartHelmet">
            <summary>
            DAQRI Smart Helmet
            </summary>
        </member>
        <member name="F:DAQRI.DeviceType.DAQRISmartGlasses">
            <summary>
            DAQRI Smart Glasses
            </summary>
        </member>
        <member name="F:DAQRI.DeviceType.Unknown">
            <summary>
            Unknown (unsupported) device
            </summary>
        </member>
        <member name="M:DAQRI.DisplayCamera.AspectFillScreenSize(System.Single,System.Int32,System.Int32)">
            <summary>Returns the size needed for an image to fill the screen.</summary>
            <returns>The image size needed to fill the screen.</returns>
            <param name="imageAspect">Image aspect ratio.</param>
            <param name="screenWidth">Screen width.</param>
            <param name="screenHeight">Screen height.</param>
        </member>
        <member name="M:DAQRI.DisplayCamera.AspectFitScreenSize(System.Single,System.Int32,System.Int32)">
            <summary>Returns the size needed for an image to fit the screen.</summary>
            <returns>The image size needed to fit the screen.</returns>
            <param name="imageAspect">Image aspect ratio.</param>
            <param name="screenWidth">Screen width.</param>
            <param name="screenHeight">Screen height.</param>
        </member>
        <member name="T:DAQRI.DisplayManager">
            <summary>
            Display Manager is responsible for setting up the stereo cameras, reticle, and backdrops for the color, depth, and thermal cameras.
            </summary>
        </member>
        <member name="P:DAQRI.DisplayManager.ScreenCenterOffset">
            <summary>
            This is the rotation between a vector pointing out from the center of the screen,
            and the forward vector of this display.
            </summary>
            <value>The screen center offset.</value>
        </member>
        <member name="F:DAQRI.DisplayManager.EnforcedReticleNearPlane">
            <summary>The near clip plane for the reticle.</summary>
        </member>
        <member name="P:DAQRI.DisplayManager.ScreenWidth">
            <summary>Gets the width of the screen.</summary>
            <value>The width of the screen.</value>
        </member>
        <member name="P:DAQRI.DisplayManager.ScreenHeight">
            <summary>Gets the height of the screen.</summary>
            <value>The height of the screen.</value>
        </member>
        <member name="M:DAQRI.DisplayManager.CurrentDeviceType">
            <summary>
            Returns the type of DAQRI device running the application.
            When running in the editor, this returns the preview device type. 
            </summary>
            <returns>The DAQRI device type.</returns>
        </member>
        <member name="M:DAQRI.DisplayManager.TurnVideoBackgroundOn">
            <summary>
            Turns the full-screen video background on.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManager.TurnVideoBackgroundOff">
            <summary>
            Turns the full-screen video background off.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManager.TurnThermalBackgroundOn">
            <summary>
            Turns the full-screen thermal background on.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManager.TurnThermalBackgroundOff">
            <summary>
            Turns the full-screen thermal background off.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManager.TurnDepthBackgroundOn">
            <summary>
            Turns the full-screen depth background on.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManager.TurnDepthBackgroundOff">
            <summary>
            Turns the full-screen depth background off.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManager.CreateAudioListerner">
            <summary>
            Creates an audio listener if there is not one in the scene.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManager.CreateVideoBackdrop">
            <summary>
            Creates the video backdrop.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManager.CreateThermalBackdrop">
            <summary>
            Creates the thermal backdrop.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManager.CreateDepthBackdrop">
            <summary>
            Creates the depth backdrop.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManager.CreateBackdropQuad">
            <summary>
            For optical see-through we use a world-space quad to represent the cameras.
            The quad is sized using the field of view and aspect ratio of its respective camera.
            This allows for easy registration.
            </summary>
        </member>
        <member name="F:DAQRI.DisplayManager.AdvancedSettings.useSplitStereoVR">
            <summary>Turns on/off the use of Unity's VR libraries.</summary>
        </member>
        <member name="T:DAQRI.SceneSingleton`1">
            <summary>
            Inherit from this class to make the component a singleton in the scene.
            </summary>
            <typeparam name="TComponent">class name</typeparam>
        </member>
        <member name="P:DAQRI.SceneSingleton`1.Instance">
            <summary>
            Static property which gives access for other classes to access methods in this class
            </summary>
        </member>
        <member name="F:DAQRI.SceneSingleton`1.isInvalidDuplicate">
            <summary>
            If true, there are multiple instances of the implemented type in the scene, 
            and this instance has been deemed invalid.
            </summary>
        </member>
        <member name="M:DAQRI.SceneSingleton`1.Awake">
            <summary>
            This logs a warning during app play.
            Make sure you still call this from the child class if you override the method.
            </summary>
        </member>
        <member name="M:DAQRI.SceneSingleton`1.OnDestroy">
            <summary>
            This cleans the instance.
            Make sure you still call this from the child class if you override the method.
            </summary>
        </member>
        <member name="T:DAQRI.ServiceManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:DAQRI.ServiceManager.controller">
            <summary>Added to allow VosExtentsions.Tests to manipulate.</summary>
        </member>
        <member name="E:DAQRI.ServiceManager.TargetIdsAvailable">
            <summary>
            Occurs when target identifiers are available.
            </summary>
        </member>
        <member name="E:DAQRI.ServiceManager.VisionParametersAvailable">
            <summary>
            Occurs when vision parameters are available.
            </summary>
        </member>
        <member name="E:DAQRI.ServiceManager.ValidPoseDataAvailable">
            <summary>
            Occurs when valid pose data is available.
            </summary>
        </member>
        <member name="E:DAQRI.ServiceManager.PositionalTrackingFound">
            <summary>
            Occurs when positional tracking is established.
            </summary>
        </member>
        <member name="E:DAQRI.ServiceManager.PositionalTrackingLost">
            <summary>
            Occurs when positional tracking is lost.
            </summary>
        </member>
        <member name="E:DAQRI.ServiceManager.OnApplicationLoad">
            <summary>
            Occurs when Application Loads.
            </summary>
        </member>
        <member name="E:DAQRI.ServiceManager.OnApplicationForeground">
            <summary>
            Occurs when Application goes to Foreground.
            </summary>
        </member>
        <member name="E:DAQRI.ServiceManager.OnApplicationBackground">
            <summary>
            Occurs when Application goes to Background.
            </summary>
        </member>
        <member name="E:DAQRI.ServiceManager.OnApplicationStop">
            <summary>
            Occurs when Application Terminates.
            </summary>
        </member>
        <member name="P:DAQRI.ServiceManager.Instance">
            <summary>
            The accessor for the <see cref="T:DAQRI.ServiceManager"/> singleton instance.
            </summary>
            <value>The singleton instance.</value>
        </member>
        <member name="P:DAQRI.ServiceManager.InstanceExists">
            <summary>
            Gets a value indicating whether this <see cref="T:DAQRI.ServiceManager"/> instance exists.
            </summary>
            <value><c>true</c> if instance exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:DAQRI.ServiceManager.SetController(DAQRI.IServiceManagerController)">
            <summary>
            Sets a custom controller.
            This is helpful when mocking behavior in tests.
            </summary>
            <param name="controller">A custom controller.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.GetIMUEnabled">
            <summary>
            Checks if the standard %IMU is enabled.
            </summary>
            <returns><c>true</c>, if %IMU is enabled, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetVIOIMUEnabled">
            <summary>
            Checks if the VIO %IMU is enabled.
            </summary>
            <returns><c>true</c>, if the VIO %IMU is enabled, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.VideoOpen(System.String)">
            <summary>
            VideoOpen is used to open new media file
            </summary>
            <param name="VideoName">Name of the media file</param>
        </member>
        <member name="M:DAQRI.ServiceManager.VideoStart(DAQRI.VideoMetaData,UnityEngine.Texture2D)">
            <summary>
            Starts the video which is opened.
            </summary>
            <param name="metaData"> The video's metadata. </param>
            <param name="texture">Texture id</param>
        </member>
        <member name="M:DAQRI.ServiceManager.VideoStop(DAQRI.VideoMetaData)">
            <summary>
            Stops the video which is opened.
            </summary>
            <param name="metaData"> The video's metadata. </param>
            <returns><c>true</c>, if video was stopped, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.VideoResume(DAQRI.VideoMetaData)">
            <summary>
            Resumes the video which is opened.
            </summary>
            <param name="metaData"> The video's metadata. </param>
            <returns><c>true</c>, if video resumes, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.VideoPause(DAQRI.VideoMetaData)">
            <summary>
            Pause the video which is opened.
            </summary>
            <param name="metaData"> The video's metadata. </param>
            <returns><c>true</c>, if video pauses, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.VideoClose(DAQRI.VideoMetaData)">
            <summary>
            Closes the video which is opened.
            </summary>
            <param name="metaData"> The video's metadata. </param>
        </member>
        <member name="M:DAQRI.ServiceManager.VideoIsPlaying(DAQRI.VideoMetaData)">
            <summary>
            Checks if the video is playing.
            </summary>
            <param name="metaData"> The video's metadata. </param>
            <returns><c>true</c>, if is video is playing, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.VideoGetThumbnail(DAQRI.VideoMetaData,System.Int32,System.Int32,UnityEngine.Texture2D,System.Byte[])">
            <summary>
            Give the thumbnail for the video using the first frame of the video.
            </summary>
            <param name="metaData">Metadata.</param>
            <param name="_width">Width.</param>
            <param name="_height">Height.</param>
            <param name="texture">Texture.</param>
            <param name="thumbnailBytes">Thumbnail bytes.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.VideoGetInfo">
            <summary>
            Get the metadata of the media file which is open.
            </summary>
            <returns>return the type DAQRI.VideoMetaData</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.VideoPercentageFinished">
            <summary>
            Get the percentage finished of the media file which is open
            </summary>
            <returns>return the percentage finished</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.RegisterToKeyboardInputCallbacks(DAQRI.Events.IKeyboardInputEventHandler)">
            <summary>
             Add a callback to execute keyboard events
            </summary>
            <param name="handler">Handler.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.UnRegisterToKeyboardInputCallbacks(DAQRI.Events.IKeyboardInputEventHandler)">
            <summary>
            Remove a keyboard event callback
            </summary>
            <param name="handler">Handler.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.ExecuteKeyboardInputRecievedCallbacks(System.String)">
            <summary>
            Executes the keyboard input recieved callbacks.
            </summary>
            <param name="str">String.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.ExecuteKeyboardShowingCallbacks(System.String)">
            <summary>
            Executes the keyboard showing callbacks.
            </summary>
            <param name="str">String.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.ExecuteKeyboardInputCancelledCallbacks(System.String)">
            <summary>
            Executes the keyboard input cancelled callbacks.
            </summary>
            <param name="str">String.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.ExecuteKeyboardErrorCallbacks(System.String)">
            <summary>
            Executes the keyboard error callbacks.
            </summary>
            <param name="str">String.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.RegisterToLifeCycleCallbacks(DAQRI.Events.IApplicationEventHandler)">
            <summary>
            Register Life cycle callbacks.
            </summary>
            <param name="handler">Callback.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.UnregisterToLifeCycleCallbacks(DAQRI.Events.IApplicationEventHandler)">
            <summary>
            Unregister Life cycle callbacks
            </summary>
            <param name="handler">Callback.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.SettingsIs24HFormat">
            <summary>
            Returns true if time is set to 24 hour format. False otherwise.
            </summary>
            <returns></returns>
            <summary>
            Checks if the system time is using 24 hour format.
            </summary>
            <returns><c>true</c>, if the system time is using 24 hour format, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.ShowKeyboard(System.String)">
            <summary>
            Shows the keyboard.
            </summary>
        </member>
        <member name="M:DAQRI.ServiceManager.RegisterVideoTextureUser(System.Object,System.Boolean)">
            <summary>
            Registers an object as using the video texture, and starts the video camera if required.
            </summary>
            <param name="user">The object using this service.</param>
            <param name="bHD">If set to <c>true</c> the camera is set to HD.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.UnregisterVideoTextureUser(System.Object)">
            <summary>
            Unregisters the video texture user and stops the video camera if no longer required.
            </summary>
            <param name="user">The object using this service.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.RegisterDepthTextureUser(System.Object)">
            <summary>
            Registers an object as using the depth texture, and starts the depth camera if required.
            </summary>
            <param name="user">The object using this service.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.UnregisterDepthTextureUser(System.Object)">
            <summary>
            Unregisters the depth texture user and stops the depth camera if no longer required.
            </summary>
            <param name="user">The object using this service.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.RegisterThermalTextureUser(System.Object)">
            <summary>
            Registers an object as using the thermal texture, and starts the thermal camera if required.
            </summary>
            <param name="user">The object using this service.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.UnregisterThermalTextureUser(System.Object)">
            <summary>
            Unregisters the thermal texture user and stops the thermal camera if no longer required.
            </summary>
            <param name="user">The object using this service.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.RegisterIMUUser(System.Object)">
            <summary>
            Registers an object as using the %IMU, and starts the %IMU if required.
            The user will not be registered if the %IMU is not available.
            </summary>
            <returns><c>true</c>, if the %IMU user was registered, <c>false</c> otherwise.</returns>
            <param name="user">The object using this service.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.UnregisterIMUUser(System.Object)">
            <summary>
            Unregisters the %IMU user and stops the %IMU if no longer required.
            </summary>
            <param name="user">The object using this service.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.RegisterVIOUser(System.Object)">
            <summary>
            Registers an object as using the VIO, and starts VIO if needed.
            The user will not be registered if VIO is not available.
            </summary>
            <returns><c>true</c>, if VIO user was registered, <c>false</c> otherwise.</returns>
            <param name="user">The object using this service.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.UnregisterVIOUser(System.Object)">
            <summary>
            Unregisters the VIO user and stops VIO if no longer required.
            </summary>
            <param name="user">The object using this service.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.GetBatteryState">
            <summary>
            Gets the state of the battery.
            </summary>
            <returns>The battery state.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetBatteryChargePercentage">
            <summary>
            Gets the battery charge percentage.
            </summary>
            <returns>The battery charge percentage.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.IsRunningInEditor">
            <summary>
            Indicates if the application is running in the Unity editor.
            </summary>
            <returns><c>true</c>, if running in the Unity editor, <c>false</c> if running on a DAQRI Smart Device.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetNearClipPlane">
            <summary>
            Gets the distance to the near clip plane.
            Anything closer to the camera than the near clip plane will not be rendered.
            </summary>
            <returns>The distance to the near clip plane.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetFarClipPlane">
            <summary>
            Gets the distance to the far clip plane.
            Anything further away from the camera than the far clip plane will not be rendered.
            </summary>
            <returns>The distance to the far clip plane.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.HasVisionParameters">
            <summary>
            Checks if the vision system has initialized.
            </summary>
            <returns><c>true</c> if the vision system has initialized; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetVisionProjectionMatrix">
            <summary>
            Gets the vision projection matrix.
            </summary>
            <returns>The vision projection matrix.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetVisionFieldOfView">
            <summary>
            Gets the vision field of view.
            </summary>
            <returns>The vision field of view.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetVisionAspectRatio">
            <summary>
            Gets the vision aspect ratio.
            </summary>
            <returns>The vision aspect ratio.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraHDOnOff">
            <summary>
            Gets the color camera HD On Off status.
            </summary>
            <returns>The color camera HD On Off status.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraAspectRatio">
            <summary>
            Gets the color camera aspect ratio.
            </summary>
            <returns>The color camera aspect ratio.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraFieldOfView">
            <summary>
            Gets the color camera field of view.
            </summary>
            <returns>The color camera field of view.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetDepthCameraFieldOfView">
            <summary>
            Gets the depth camera field of view.
            </summary>
            <returns>The depth camera field of view.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetDepthCameraAspectRatio">
            <summary>
            Gets the depth camera aspect ratio.
            </summary>
            <returns>The depth camera aspect ratio.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraFieldOfView">
            <summary>
            Gets the thermal camera field of view.
            </summary>
            <returns>The thermal camera field of view.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraAspectRatio">
            <summary>
            Gets the thermal camera aspect ratio.
            </summary>
            <returns>The thermal camera aspect ratio.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraTexture">
            <summary>
            Gets a texture that is continuously rendered using the color camera.
            This is only available if you've registered a color camera user.
            </summary>
            <returns>The color camera texture.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraTexture">
            <summary>
            Gets a texture that is continuously rendered using the thermal camera.
            This is only available if you've registered a thermal camera user.
            </summary>
            <returns>The thermal camera texture.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetDepthCameraTexture">
            <summary>
            Gets a texture that is continuously rendered using the depth camera.
            This is only available if you've registered a depth camera user.
            </summary>
            <returns>The depth camera texture.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraBuffer">
            <summary>
            Gets color camera buffer.
            This is only available if you've registered a color camera user.
            </summary>
            <returns>The color camera buffer.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraBuffer">
            <summary>
            Gets the thermal camera buffer.
            This is only available if you've registered a thermal camera user.
            </summary>
            <returns>The thermal camera buffer.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetDepthCameraBuffer">
            <summary>
            Gets Depth camera buffer.
            This is only available if you've registered a depth camera user.
            </summary>
            <returns>The depth camera buffer.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraBufferSize">
            <summary>
            Gets color camera buffer size.
            This is only available if you've registered a color camera user.
            </summary>
            <returns>The color camera buffer size.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraBufferSize">
            <summary>
            Gets the thermal camera buffer size.
            This is only available if you've registered a thermal camera user.
            </summary>
            <returns>The thermal camera buffer size.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetDepthCameraBufferSize">
            <summary>
            Gets Depth camera buffer size.
            This is only available if you've registered a depth camera user.
            </summary>
            <returns>The depth camera buffer size.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraDimensions">
            <summary>
            Gets the dimensions of the color camera image.
            </summary>
            <returns>The dimensions of the color camera image.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetDepthCameraDimensions">
            <summary>
            Gets the dimensions of the depth camera image.
            </summary>
            <returns>The dimensions of the depth camera image.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraDimensions">
            <summary>
            Gets the dimensions of the thermal camera image.
            </summary>
            <returns>The dimensions of the thermal camera image.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraPose_Position">
            <summary>
            Gets the position of the color camera image from VIO IMU
            </summary>
            <returns>The position of the color camera image from VIO IMU</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetDepthCameraPose_Position">
            <summary>
            Gets the position of the depth camera image from VIO IMU
            </summary>
            <returns>The position of the depth camera image from VIO IMU</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraPose_Position">
            <summary>
            Gets the position of the thermal camera image from VIO IMU
            </summary>
            <returns>The position of the thermal camera image from VIO IMU</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraPose_Rotation">
            <summary>
            Gets the rotation of the color camera image from VIO IMU
            </summary>
            <returns>The rotation of the color camera image from VIO IMU</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetDepthCameraPose_Rotation">
            <summary>
            Gets the rotation of the depth camera image from VIO IMU
            </summary>
            <returns>The rotation of the depth camera image from VIO IMU</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraPose_Rotation">
            <summary>
            Gets the rotation of the thermal camera image from VIO IMU
            </summary>
            <returns>The rotation of the thermal camera image from VIO IMU</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraTheoreticalRate">
            <summary>
            Gets the theoretical frame rate of the color camera
            </summary>
            <returns>the theoretical frame rate of the color camera</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetDepthCameraTheoreticalRate">
            <summary>
            Gets the theoretical frame rate of the depth camera
            </summary>
            <returns>the theoretical frame rate of the depth camera</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraTheoreticalRate">
            <summary>
            Gets the theoretical frame rate of the depth camera
            </summary>
            <returns>the theoretical frame rate of the depth camera</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraHardwareAvailable">
            <summary>
            Checks if the DAQRI Smart Device has a thermal camera.
            </summary>
            <returns><c>true</c>, if device has a thermal camera, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetColorCameraDataFormat">
            <summary>
            Gets the color camera data format.
            </summary>
            <returns>The color camera data format.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetDepthCameraDataFormat">
            <summary>
            Gets the depth camera data format.
            </summary>
            <returns>The depth camera data format.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetThermalCameraDataFormat">
            <summary>
            Gets the thermal camera data format.
            </summary>
            <returns>The thermal camera data format.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.SetAutoExposureOnOff(System.Boolean)">
            <summary>
            Turns the color camera autoExposure on or off.
            </summary>
            <param name="value">If set to <c>true</c> the histogram will be turned on.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.SetWhiteBalanceOnOff(System.Boolean)">
            <summary>
            Turns the color camera WhiteBalance on or off.
            </summary>
            <param name="value">If set to <c>true</c> the histogram will be turned on.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.SetDepthRenderType(DAQRI.Sensors.DeviceDepthRenderType)">
            <summary>
            Turns the depth histogram on or off.
            </summary>
            <param name="type">If set to <c>DeviceDepthRenderType.HISTOGRAM</c> the histogram will be turned on.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.SetNearClipPlane(System.Single)">
            <summary>
            Sets the distance to the near clip plane.
            Anything closer to the camera than the near clip plane will not be rendered.
            </summary>
            <param name="nearClipPlane">Distance to the near clip plane.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.SetFarClipPlane(System.Single)">
            <summary>
            Sets the distance to the far clip plane.
            Anything farther from the camera than the far clip plane will not be rendered.
            </summary>
            <param name="farClipPlane">Distance to the far clip plane.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.RegisterTarget(System.String,UnityEngine.GameObject)">
            <summary>
            Registers a tracking target.
            </summary>
            <param name="targetPath">The file path of the target image.</param>
            <param name="trackedObject">The tracked object game object.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.RegisterTargetSet(System.Collections.Generic.List{DAQRI.MarkerTracking.TrackedObjectAbstraction})">
            <summary>
            Registers multiple tracking targets.
            </summary>
            <param name="_trackedObject">The tracked objects.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.UnRegisterTarget(System.String)">
            <summary>
            Unregisters a tracking target.
            </summary>
            <param name="targetPath">The file path of the target image.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.GetTargetId(System.String)">
            <summary>
            Gets the internally assigned ID of a target.
            </summary>
            <returns>The target ID.</returns>
            <param name="targetPath">The file path of the target image.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.ActivateTarget(System.String)">
            <summary>
            Activates a target, allowing the system to recognize it.
            </summary>
            <param name="targetPath">The file path of the target image.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.ActivateTarget(System.Int32)">
            <summary>
            Activates a target, allowing the system to recognize it.
            </summary>
            <param name="targetId">The internally assigned target ID.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.DeactivateTarget(System.String)">
            <summary>
            Deactivates a target. 
            The system will no longer recognize this target.
            </summary>
            <param name="targetPath">The file path of the target image.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.DeactivateTarget(System.Int32)">
            <summary>
            Deactivates a target. 
            The system will no longer recognize this target.
            </summary>
            <param name="targetId">The internally assigned target ID.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.SetTargetSize(System.Int32,System.Single,System.Single)">
            <summary>
            Notifies the system of the real-world size of the target in meters.
            </summary>
            <param name="targetId">The internally assigned target ID.</param>
            <param name="width">Target width in meters.</param>
            <param name="height">Target height in meters.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.GetTargetVisibility(System.Int32)">
            <summary>
            Checks if a target is currently visible to the camera.
            </summary>
            <returns><c>true</c>, if the target is visible, <c>false</c> otherwise.</returns>
            <param name="targetId">The internally assigned target ID.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.GetTargetPosition(System.Int32)">
            <summary>
            Gets the position of a target.
            </summary>
            <returns>The position of the target.</returns>
            <param name="targetId">The internally assigned target ID.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.GetTargetOrientation(System.Int32)">
            <summary>
            Gets the orientation of a target.
            </summary>
            <returns>The orientation of the target.</returns>
            <param name="targetId">The internally assigned target ID.</param>
        </member>
        <member name="P:DAQRI.ServiceManager.VIOEmulation">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:DAQRI.ServiceManager"/> is emulating VIO.
            </summary>
            <value><c>true</c> if VIO is being emulated; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:DAQRI.ServiceManager.GetPosition">
            <summary>
            Gets the position of the device.
            </summary>
            <returns>The position of the device.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetWorldVelocity">
            <summary>
            Gets the velocity of the device.
            </summary>
            <returns>The velocity of the device.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetOrientation">
            <summary>
            Gets the orientation of the device.
            </summary>
            <returns>The orientation of the device.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.HasIMUData">
            <summary>
            Checks if the %IMU has started and successfully returned data.
            </summary>
            <returns><c>true</c> if %IMU data is available; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.HasPoseData">
            <summary>
            Checks if the VIO %IMU has started and successfully returned pose data.
            </summary>
            <returns><c>true</c> if pose data is available; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetIMUGyro">
            <summary>
            Gets the latest %IMU gyro value.
            </summary>
            <returns>The %IMU gyro value.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetIMUQuaternion">
            <summary>
            Gets the latest %IMU rotation value.
            </summary>
            <returns>The %IMU rotation value.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.GetIMUMagneticField">
            <summary>
            Gets the latest %IMU magnetic field value.
            </summary>
            <returns>The %IMU magnetic field value.</returns>
        </member>
        <member name="M:DAQRI.ServiceManager.SimulateIMU(UnityEngine.Vector3,UnityEngine.Quaternion)">
            <summary>
            Sets simulated data for the %IMU.
            </summary>
            <param name="gyro">Simulated %IMU gyro value.</param>
            <param name="rot">Simulated %IMU rotation value.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.SimulateIMUPosition(UnityEngine.Vector3)">
            <summary>
            Sets a simulated position for the %IMU.
            </summary>
            <param name="position">Simulated %IMU position.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.SimulateVIO(UnityEngine.Vector3,UnityEngine.Quaternion)">
            <summary>
            Sets a simulated position for the %IMU.
            </summary>
            <param name="position">Simulated %IMU position.</param>
            <param name="rot">Simulated %IMU rotation.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.PerformRuntimeSystemValidation">
            <summary>
            Executes any runtime validation that needs to be done,
            such as checking VOS version.
            </summary>
        </member>
        <member name="M:DAQRI.ServiceManager.Vector3FromFloatArray(System.Single[])">
            <summary>
            Creates a Unity Vector3 from an array of floats.
            </summary>
            <returns>A new <see cref="T:UnityEngine.Vector3"/> with the given values.</returns>
            <param name="values">Array of three floats.</param>
        </member>
        <member name="M:DAQRI.ServiceManager.QuaternionFromFloatArray(System.Single[])">
            <summary>
            Creates a Unity Quaternion from an array of floats.
            </summary>
            <returns>A new <see cref="T:UnityEngine.Quaternion"/> with the given values.</returns>
            <param name="values">Array of four floats to populate the quaternion.</param>
        </member>
        <member name="F:DAQRI.ServiceManagerController.bVIOMode">
            <summary>
            performance mode uses VIN Imu
            </summary>
        </member>
        <member name="T:DAQRI.ThermalPreviewAbstraction">
            <summary>
            This script handles the rendering of a live video feed from the thermal camera.
            To use, drag the thermal camera preview prefab into your scene.
            </summary>
        </member>
        <member name="M:DAQRI.RunEnvironmentInfo.SetPreviewDeviceType(DAQRI.DeviceType)">
            <summary>
            Set the device type to simulate when running in the editor.
            Set this from anywhere in the code and it will apply to all instances of this class.
            </summary>
            <param name="deviceType">Device type.</param>
        </member>
        <member name="M:DAQRI.RunEnvironmentInfo.SetDSHPlugin(DAQRI.IDSDUnityPlugin)">
            <summary>
            This is useful for testing, and is not necessary to call in normal program execution.
            </summary>
            <param name="plugin">DSH Plugin.</param>
        </member>
        <member name="M:DAQRI.RunEnvironmentInfo.CurrentDeviceType">
            <summary>
            Returns the current DAQRI device running this program.
            If running in the editor, this will return the preview device type.
            </summary>
            <returns>The DAQRI device type.</returns>
        </member>
        <member name="M:DAQRI.RunEnvironmentInfo.CurrentVOSVersion">
            <summary>
            Returns the version of VOS being run.
            Returns an empty string when running in the editor.
            </summary>
            <returns>The VOS version.</returns>
        </member>
        <member name="M:DAQRI.RunEnvironmentInfo.IsVOSVersionValid">
            <summary>
            Determines whether VOS meets the minimum version requirement.
            Always returns true when running in the editor.
            </summary>
            <returns><c>true</c> if the VOS version is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DAQRI.RunEnvironmentInfo.IsRunningInEditor">
            <summary>
            Determines whether this instance is running in the editor.
            Labeled as virtual to allow stubbing in a partial mock of this class.
            </summary>
            <returns><c>true</c> if this instance is running in editor; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DAQRI.ComparisonExtensions.GetClampedValue``1(``0,``0,``0)">
            <summary>
            Finds the restricted value between a minimum and maximum.
            This does not alter the receiver.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="max">The maximum allowed value.</param>
            <param name="min">The minimum allowed value.</param>
        </member>
        <member name="M:DAQRI.StringComparisonExtensions.CompareSemanticVersionTo(System.String,System.String)">
            <summary>
            Compares this instance, containing a sematic version string, to another semantic version string.
            This method expects both strings to be in the format "MAJOR.MINOR.PATCH".
            Return values refer to the receiver.
            For example, a return value of LessThan indicates the receiver version is lower than the other string.
            </summary>
            <returns>The comparison result.</returns>
            <param name="receiver">Receiver.</param>
            <param name="stringToCompare">String to compare.</param>
        </member>
        <member name="M:DAQRI.ConfigReader.ReadEntryFromProjectFile(System.String)">
            <summary>
            Reads an entry directly from the configuration file. 
            Expects key=value format.
            </summary>
            <returns>The value specified by the key if exists or empty string.</returns>
            <param name="key">Key.</param>
        </member>
        <member name="M:DAQRI.ConfigReader.ReadEntryFromString(System.String,System.String)">
            <summary>
            Reads an entry from a string.
            Expects key=value format.
            </summary>
            <returns>The value specified by the key if exists or empty string.</returns>
            <param name="key">Key.</param>
            <param name="configString">Configuration string.</param>
        </member>
        <member name="M:DAQRI.ConfigReader.PathToFile">
            <summary>
            Returns the path to the configuration file.
            </summary>
            <returns>The file path.</returns>
        </member>
        <member name="M:DAQRI.Backdrop.Backdrop.CalculateLocalPosition(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
            <summary>Calculates the local position.</summary>
            <returns>The local position.</returns>
            <param name="position">Position.</param>
            <param name="rotation">Rotation.</param>
            <param name="farClipPlane">Far clip plane.</param>
        </member>
        <member name="M:DAQRI.Backdrop.Backdrop.CalculateLocalScale(System.Single,System.Single,System.Single)">
            <summary>Calculates the local scale.</summary>
            <returns>The local scale.</returns>
            <param name="aspect">The backdrop's aspect ratio.</param>
            <param name="fieldOfView">The backdrop's field of view.</param>
            <param name="farClipPlane">Far clip plane.</param>
        </member>
        <member name="P:DAQRI.Backdrop.Backdrop.RunEnvironmentInfo">
            <summary>
            Sets the run environment info. This can be useful when mocking behavior in
            tests.
            </summary>
            <value>Run evironment info.</value>
        </member>
        <member name="F:DAQRI.MarkerTracking.TargetFile.path">
            <summary>Target image file name, with extension.</summary>
        </member>
        <member name="F:DAQRI.MarkerTracking.TargetFile.sizeInMeters">
            <summary>Real world unit in meters : 1.0f = 1 meter.</summary>
        </member>
        <member name="P:DAQRI.MarkerTracking.TargetFile.Path">
            <summary>Target image file name, with extension.</summary>
        </member>
        <member name="P:DAQRI.MarkerTracking.TargetFile.AbsolutePath">
            <summary>
            Target absolute path which is saved so that on threads or
            threaded callbacks we have access to it.
            If it is not set, and the <see cref="P:DAQRI.MarkerTracking.TargetFile.Path"/> is, it will attempt to
            make it relative to the <see cref="T:UnityEngine.Application"/>.
            <see cref="P:UnityEngine.Application.streamingAssetsPath"/>.
            </summary>
        </member>
        <member name="P:DAQRI.MarkerTracking.TargetFile.SizeInMeters">
            <summary>
            The real-world size in meters.
            </summary>
            <value>The size in meters.</value>
        </member>
        <member name="P:DAQRI.MarkerTracking.TargetFile.WidthInMeters">
            <summary>
            The real-world width in meters.
            Changing this will automatically adjust the height to maintain the image aspect ratio.
            </summary>
            <value>The width in meters.</value>
        </member>
        <member name="P:DAQRI.MarkerTracking.TargetFile.HeightInMeters">
            <summary>
            The real-world height in meters.
            Changing this will automatically adjust the width to maintain the image aspect ratio.
            </summary>
            <value>The height in meters.</value>
        </member>
        <member name="P:DAQRI.MarkerTracking.TargetFile.Aspect">
            <summary>Aspect of the source image (computed in the TargetFileDrawer).</summary>
        </member>
        <member name="P:DAQRI.MarkerTracking.TargetFile.ApplicationStreamingAssetsPath">
            <summary>Gets the <see cref="T:UnityEngine.Application"/>.<see cref="P:UnityEngine.Application.streamingAssetsPath"/>
            one time and saves it so even on threads or threaded callbacks we have access to it.</summary>
        </member>
        <member name="T:DAQRI.MarkerTracking.TrackedObjectAbstraction">
            <summary>
            The tracked object class handles image tracking and the triggering of found and lost events.
            </summary>
        </member>
        <member name="F:DAQRI.MarkerTracking.TrackedObjectAbstraction.OnTrackerFound">
            <summary>
            Invoked when tracker is found on this target.
            </summary>
        </member>
        <member name="F:DAQRI.MarkerTracking.TrackedObjectAbstraction.OnTrackerLost">
            <summary>
            Invoked when tracker is lost on this target.
            </summary>
        </member>
        <member name="P:DAQRI.MarkerTracking.TrackedObjectAbstraction.TargetWidthInMeters">
            <summary>
            The real-world target width in meters.
            Changing this value will automatically adjust the height to maintain the image aspect ratio.
            For best performance, do not change this at runtime unless it's really needed.
            </summary>
            <value>The target width in meters.</value>
        </member>
        <member name="P:DAQRI.MarkerTracking.TrackedObjectAbstraction.TargetHeightInMeters">
            <summary>
            The real-world target height in meters.
            Changing this value will automatically adjust the width to maintain the image aspect ratio.
            For best performance, do not change this at runtime unless it's really needed.
            </summary>
            <value>The target height in meters.</value>
        </member>
        <member name="P:DAQRI.MarkerTracking.TrackedObjectAbstraction.TargetSizeInMeters">
            <summary>
            The real-world target size in meters.
            This returns the same values as the individual width and height accessors,
            but uses a cached Vector2 for efficiency.
            </summary>
            <value>The target size in meters.</value>
        </member>
        <member name="P:DAQRI.MarkerTracking.TrackedObjectAbstraction.Name">
            <summary>
            The name of the tracked object.
            Changing this will rename the game object.
            </summary>
            <value>The tracked object name.</value>
        </member>
        <member name="P:DAQRI.MarkerTracking.TrackedObjectAbstraction.TargetAbsolutePath">
            <summary>
            The target image relative path, with extension.
            </summary>
            <value>The relative path of the target image.</value>
        </member>
        <member name="P:DAQRI.MarkerTracking.TrackedObjectAbstraction.TrackingStatus">
            <summary>
            The Tracking status.
            NOT_READY - When the tracker is getting initialized
            NOT_TRACKED - When Tracker is ready, but no marker is tracked
            TRACKED - When marker gets tracked
            TRACKING_LOST - When VIO failes
            TRACKING_GAINED - When marker is found
            </summary>
        </member>
        <member name="P:DAQRI.MarkerTracking.TrackedObjectAbstraction.TargetId">
            <summary>
            The automatically-assigned unique ID for this target.
            </summary>
            <value>The target ID.</value>
        </member>
        <member name="P:DAQRI.MarkerTracking.TrackedObjectAbstraction.IsVisible">
            <summary>
            Tells you if the target is currently visible based on tracking.
            </summary>
        </member>
        <member name="P:DAQRI.MarkerTracking.TrackedObjectAbstraction.IsVIOActive">
            <summary>
            Tells you whether VIO is currently active.
            </summary>
            <value><c>true</c> if VIO is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:DAQRI.MarkerTracking.TrackedObjectAbstraction.TRACKINGSTATE">
            <summary>
            Enumeration for Tracking states
            </summary>
        </member>
        <member name="F:DAQRI.MarkerTracking.TrackedObjectAbstraction.TRACKINGSTATE.NOT_READY">
            <summary>
            When the tracker is getting initialized
            </summary>
        </member>
        <member name="F:DAQRI.MarkerTracking.TrackedObjectAbstraction.TRACKINGSTATE.NOT_TRACKED">
            <summary>
            When Tracker is ready, but no marker is tracked
            </summary>
        </member>
        <member name="F:DAQRI.MarkerTracking.TrackedObjectAbstraction.TRACKINGSTATE.TRACKED">
            <summary>
            When marker gets tracked
            </summary>
        </member>
        <member name="F:DAQRI.MarkerTracking.TrackedObjectAbstraction.TRACKINGSTATE.TRACKING_LOST">
            <summary>
            When VIO failes
            </summary>
        </member>
        <member name="F:DAQRI.MarkerTracking.TrackedObjectAbstraction.TRACKINGSTATE.TRACKING_GAINED">
            <summary>
            When marker is found
            </summary>
        </member>
        <member name="M:DAQRI.MarkerTracking.TrackedObjectAbstraction.SetImageSource(System.String,System.Single)">
            <summary>
            Will reset the target file and untrack it. Then attempt to load up the
            <paramref name="absolutePath"/> if passed to it and use it as it's target.
            </summary>
            <param name="absolutePath">Target file path to use to track this if not null.</param>
            <param name="withInMeters">
            How big to make the texture once the aspect ratio has been
            determined.
            </param>
        </member>
        <member name="M:DAQRI.MarkerTracking.TrackedObjectAbstraction.FetchTargetId">
            <summary>
            Requests an ID for this target, and assigns it to <see cref="P:DAQRI.MarkerTracking.TrackedObjectAbstraction.TargetId"/>.
            </summary>
        </member>
        <member name="M:DAQRI.MarkerTracking.TrackedObjectAbstraction.RegisterToCallbacks(DAQRI.MarkerTracking.ITrackedObjectEventHandler)">
            <summary>
            Add a callback to be executed on tracker events.
            </summary>
            <param name="handler">Callback.</param>
        </member>
        <member name="M:DAQRI.MarkerTracking.TrackedObjectAbstraction.UnregisterToCallbacks(DAQRI.MarkerTracking.ITrackedObjectEventHandler)">
            <summary>
            Remove a tracker event callback.
            </summary>
            <param name="handler">Callback.</param>
        </member>
        <member name="T:DAQRI.MarkerTracking.TrackedObjectEventHandlerImplAbstractBehaviour">
            <summary>
            This class shows and hides the child game objects of a tracked object in response to tracked object found and lost events.
            </summary>
        </member>
        <member name="M:DAQRI.MarkerTracking.TrackedObjectEventHandlerImplAbstractBehaviour.OnTrackedObjectFound(DAQRI.MarkerTracking.TrackedObjectAbstraction)">
            <summary>
            This method is automatically called when the tracked object is found. 
            It sets the child game objects of the tracked object to active.
            </summary>
            <param name="trackedObject">The tracked object.</param>
        </member>
        <member name="M:DAQRI.MarkerTracking.TrackedObjectEventHandlerImplAbstractBehaviour.OnTrackedObjectLost(DAQRI.MarkerTracking.TrackedObjectAbstraction)">
            <summary>
            This method is automatically called when the tracked object is lost. 
            It sets the child game objects of the tracked object to inactive.
            </summary>
            <param name="trackedObject">The tracked object.</param>
        </member>
        <member name="T:DAQRI.MarkerTracking.TrackedObjectLoader">
            <summary>
            <para>
            This class can be set up by adding it to a <see cref="T:DAQRI.MarkerTracking.TrackedObjectAbstraction"/>, calling
            <see cref="M:DAQRI.MarkerTracking.TrackedObjectAbstraction.SetImageSource(System.String,System.Single)"/>, or
            <see cref="M:DAQRI.MarkerTracking.TrackedObjectLoader.SetTargetImageSource(DAQRI.MarkerTracking.TrackedObjectAbstraction,System.String,System.Single)"/>.
            </para>
            <para>
            It will instantly reset the target files for the
            <see cref="T:DAQRI.MarkerTracking.TrackedObjectAbstraction"/> there by also allowing for a way to stop tracking it.
            </para>
            <para>
            If there is an <see cref="F:DAQRI.MarkerTracking.TrackedObjectLoader.absolutePath"/> passed to the class, it will attempt to
            load up the texture to determine it's validitiy and aspect ratio to use for the
            <see cref="T:DAQRI.MarkerTracking.TrackedObjectAbstraction"/>.
            </para>
            </summary>
        </member>
        <member name="M:DAQRI.MarkerTracking.TrackedObjectLoader.SetTargetImageSource(DAQRI.MarkerTracking.TrackedObjectAbstraction,System.String,System.Single)">
            <summary>
            Will reset the target file and untrack it. Then attempt to load up the
            <paramref name="absolutePath"/> if passed to it and use it as it's target.
            </summary>
            <param name="trackedObject">The instance to apply the changes to.</param>
            <param name="absolutePath">Target file path to use to track this if not null.</param>
            <param name="withInMeters">
            How big to make the texture once the aspect ratio has been
            determined.
            </param>
        </member>
        <member name="T:DAQRI.MarkerTracking.ITrackedObjectEventHandler">
            <summary>
            This interface defines the methods required to respond to tracked object events.
            </summary>
        </member>
        <member name="M:DAQRI.MarkerTracking.ITrackedObjectEventHandler.OnTrackedObjectFound(DAQRI.MarkerTracking.TrackedObjectAbstraction)">
            <summary>
            Implement this method to respond to a tracked object found event.
            </summary>
            <param name="trackedObject"></param>
        </member>
        <member name="M:DAQRI.MarkerTracking.ITrackedObjectEventHandler.OnTrackedObjectLost(DAQRI.MarkerTracking.TrackedObjectAbstraction)">
            <summary>
            Implement this method to respond to a tracked object lost event.
            </summary>
            <param name="trackedObject"></param>
        </member>
        <member name="T:DAQRI.MarkerTracking.AbstractTrackedObjectEventHandler">
            <summary>
            Extend AbstractTrackedObjectEventHandler and override the virtual methods 
            to respond to tracking found and lost events.
            </summary>
        </member>
        <member name="M:DAQRI.MarkerTracking.AbstractTrackedObjectEventHandler.OnTrackedObjectFound(DAQRI.MarkerTracking.TrackedObjectAbstraction)">
            <summary>
            Overide this method to respond to a tracked object found event.
            </summary>
            <param name="trackedObject"></param>
        </member>
        <member name="M:DAQRI.MarkerTracking.AbstractTrackedObjectEventHandler.OnTrackedObjectLost(DAQRI.MarkerTracking.TrackedObjectAbstraction)">
            <summary>
            Overide this method to respond to a tracked object lost event.
            </summary>
            <param name="trackedObject"></param>
        </member>
        <member name="M:DAQRI.MarkerTracking.TrackedObjectGizmos.TestVisibleEditor(DAQRI.MarkerTracking.TrackedObjectAbstraction)">
            <summary>
            Tests if the tracked object is visible in the editor.
            </summary>
            <returns><c>true</c>, if visible, <c>false</c> otherwise.</returns>
            <param name="trackedObject">The object to see if is visible.</param>
        </member>
        <member name="M:DAQRI.MarkerTracking.TrackedObjectGizmos.TestVisibleEditor(System.Single,System.Single,UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Tests if the tracked object is visible in the editor.
            </summary>
            <returns><c>true</c>, if visible, <c>false</c> otherwise.</returns>
            <param name="screenWidth">Screen width.</param>
            <param name="screenHeight">Screen height.</param>
            <param name="viewportBottomLeft">Viewport bottom left.</param>
            <param name="viewportTopRight">Viewport top right.</param>
        </member>
        <member name="T:DAQRI.Internal.CellClickEvent">
            <summary>
            The int parameter indicates the row number of the clicked cell.
            </summary>
        </member>
        <member name="M:DAQRI.Internal.ScrollViewCellWrapper.#ctor(UnityEngine.GameObject)">
            <summary>
            The cell wrapper check the game object for a 'Button' component.
            If it finds one, it adds a listener that will trigger the cell click event.
            </summary>
            <param name="instantiatedCell">Instantiated cell game object.</param>
        </member>
        <member name="T:DAQRI.ScrollViewAbstractBehaviour">
            <summary>
            This class handles scrolling functionality, arrangement of cells in the view, and cell clicks.
            </summary>
        </member>
        <member name="F:DAQRI.ScrollViewAbstractBehaviour.cellPrefab">
            <summary>
            All cells will be instantiated from this prefab.
            To have the cell respond to the reticle dwell, add a Button component to the prefab's hierarchy.
            The button will be automatically linked to the reticle dwell event.
            Note that because of this automatic linking, having other buttons on the cell is not supported.
            </summary>
        </member>
        <member name="F:DAQRI.ScrollViewAbstractBehaviour.controller">
            <summary>
            The controller provides the information needed for each row.
            It also allows you to respond to cell click events, 
            which are generated by the reticle dwelling on a cell's Button component.
            You must assign a controller to use the scroll view.
            </summary>
        </member>
        <member name="F:DAQRI.ScrollViewAbstractBehaviour.cellSpacing">
            <summary>
            The space between each cell.
            </summary>
        </member>
        <member name="P:DAQRI.ScrollViewAbstractBehaviour.ContentOffset">
            <summary>
            The content offset indicates the vertical scroll position.
            A content offset of zero corresponds to the top of the scroll view.
            An increase in content offset reveals the bottom content.
            A decrease reveals the top content.
            Scrolling behavior is done via setting this property.
            </summary>
            <value>The content offset.</value>
        </member>
        <member name="F:DAQRI.ScrollViewAbstractBehaviour.fitHeightToCells">
            <summary>
            If true, the view will change height on Start so that only a whole number of cells are showing.
            If a cell is partially displayed, the height will shrink so that cell is out of view.
            If false, no height adjustment occurs.
            </summary>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.MaxContentOffset">
            <summary>
            Returns the maximum allowed content offset.
            </summary>
            <returns>The maximum content offset.</returns>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.HasScrollableContent">
            <summary>
            Indicates whether the scrolling behavior is needed.
            If all rows can fit within the bounds of the scroll view, scrolling is not needed.
            </summary>
            <returns><c>true</c> if this instance has scrollable content; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.CanScrollUp">
            <summary>
            Indicates whether there is offscreen content above the currently visible content.
            </summary>
            <returns><c>true</c> if there is offscreen content above the visible rows; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.CanScrollDown">
            <summary>
            Indicates whether there is offscreen content below the currently visible content.
            </summary>
            <returns><c>true</c> if there is offscreen content below the visible rows; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.Reload">
            <summary>
            Forces an update of the scroll view contents. 
            Call this if your data source has changed.
            </summary>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.NumberOfRowsFittingInViewAtTop">
            <summary>
            Returns the hypothetical number of rows that are visible in the scroll view
            when the content offset is zero.
            This is only based on view sizes, and has nothing to do with the actual number of user-defined rows.
            Note that when the content offset is non-zero, 
            the actual number of visible rows may be different than the value returned here.
            </summary>
            <returns>The number of rows visible when the content offset is zero.</returns>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.MaxPossibleVisibleRows">
            <summary>
            Returns the maximum possible number of visible rows for any content offset.
            Note the actual number of visible rows may be less,
            based on the content offset and cell alignment with the scroll view.
            </summary>
            <returns>The max number of visible rows possible for any content offset.</returns>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.ContentViewHeightToFitCells">
            <summary>
            Returns the suggested height for the content view to display only whole cells.
            The returned value will always be smaller or equal to the current height.
            </summary>
            <returns>The suggested view height to show only whole cells.</returns>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.NewCellWrapper">
            <summary>
            Creates a new cell wrapper object.
            The cell game object is setup and ready to be configured for the specific row.
            </summary>
            <returns>A new cell wrapper.</returns>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.SetTransformYPosition(UnityEngine.RectTransform,System.Single)">
            <summary>
            Convenience method for setting the y position of a rect transform.
            </summary>
            <param name="transform">Transform.</param>
            <param name="yPosition">Y position.</param>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.UpdateVisibleRowsList">
            <summary>
            Updates the visible rows list property with currently visible rows.
            </summary>
        </member>
        <member name="M:DAQRI.ScrollViewAbstractBehaviour.ValidateCellPrefab">
            <summary>
            Checks if the cell prefab is valid, and logs any errors.
            </summary>
            <returns><c>true</c>, if cell prefab is valid, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:DAQRI.ScrollViewButtonAbstractBehaviour">
            <summary>
            This class handles button behaviour for scrolling up and down in a class that inherits from ScrollViewAbstractBehaviour.
            </summary>
        </member>
        <member name="T:DAQRI.ScrollViewButtonAbstractBehaviour.ScrollDirection">
            <summary>
            Defines the scroll direction for a panel in a scroll view.
            </summary>
        </member>
        <member name="F:DAQRI.ScrollViewButtonAbstractBehaviour.ScrollDirection.Up">
            <summary>
            Y axis positive movement
            </summary>
        </member>
        <member name="F:DAQRI.ScrollViewButtonAbstractBehaviour.ScrollDirection.Down">
            <summary>
            Y axis negative movement
            </summary>
        </member>
        <member name="F:DAQRI.ScrollViewButtonAbstractBehaviour.speed">
            <summary>
            Use this to change the scroll speed of the panel in scroll view.
            </summary>
        </member>
        <member name="F:DAQRI.ScrollViewButtonAbstractBehaviour.scrollDirection">
            <summary>
            Use this to select the scroll direction when the button is clicked.
            </summary>
        </member>
        <member name="F:DAQRI.ScrollViewButtonAbstractBehaviour.scrollView">
            <summary>
            Use this to assign the scroll view to be affected by the button.
            </summary>
        </member>
        <member name="T:DAQRI.ScrollViewControllerAbstractBehaviour">
            <summary>
            Implement this class and assign the object to the controller property 
            of a class that inherits from ScrollViewAbstractBehaviour.
            </summary>
        </member>
        <member name="M:DAQRI.ScrollViewControllerAbstractBehaviour.NumberOfRows">
            <summary>
            Return the total number of rows to display in the scroll view.
            </summary>
            <returns>The number of rows.</returns>
        </member>
        <member name="M:DAQRI.ScrollViewControllerAbstractBehaviour.TextForRow(System.Int32)">
            <summary>
            Return the text for a given row.
            Note that the first row is considered row number zero.
            </summary>
            <returns>The text for a row.</returns>
            <param name="row">The row number.</param>
        </member>
        <member name="M:DAQRI.ScrollViewControllerAbstractBehaviour.DidSelectRow(System.Int32)">
            <summary>
            Implement this to respond to the reticle dwell on a row's button.
            Note that the first row is considered row number zero.
            </summary>
            <param name="row">The row number.</param>
        </member>
        <member name="M:DAQRI.ScrollViewControllerAbstractBehaviour.ConfigureCellForRow(UnityEngine.GameObject,System.Int32)">
            <summary>
            Override this method to do any custom setup of a cell.
            This will be called just before the cell appears in the scroll view.
            Note that the first row is considered row number zero.
            </summary>
            <param name="cell">The cell game object.</param>
            <param name="row">The row number.</param>
        </member>
        <member name="T:DAQRI.BodySpaceAbstractBehaviour">
            <summary>
            Can be placed on an object to allow it to maintain the
            <see cref="T:DAQRI.DisplayManager"/>'s position and follow the screen.
            </summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.verticalLock">
            <summary>
            If true, body space rotates only around the y axis, making content locked at a set height.
            If false, body space will also rotate around the x axis, allowing content to move vertically as the user looks up and down.
            </summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.LooseFollow">
            <summary>
            If true, body space will animate back in front of the camera if it goes out of view.
            </summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.looseFollowOffsetAngle">
            <summary>The angle from forward that body space content stops after a loose follow.</summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.LooseFollowDuration">
            <summary>Number of seconds it takes to perform the rotation to be viewed back on screen.</summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.SecondsAllowedOffScreen">
            <summary>Number of seconds allowed before animating back on screen.</summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.StartingYawRotation">
            <summary>
            <para>The rotation on the Y axis that the loose follow will initialize at.</para>
            <para>
            If <see cref="F:DAQRI.BodySpaceAbstractBehaviour.LooseFollow"/> is <c>true</c>, then this object will rotate from this
            value to be on screen which will prevent snapping.
            </para>
            <para>
            If <see cref="F:DAQRI.BodySpaceAbstractBehaviour.LooseFollow"/> is <c>false</c>, then this object will snap to a Y
            axis rotation of 0 once the device orientation has been discovered.
            </para>
            </summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.OffScreenBounds">
            <summary>
            This defines the screen boundaries that trigger the loose follow behaviour. 
            The middle of the screen is considered (0,0), and each edge is one unit away.
            </summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.animationSpeed">
            <summary>Calculated before each loose follow to prevent expensive divides each frame.</summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.animationTime">
            <summary>How long the loose follow rotation has taken so far.</summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.startRotation">
            <summary>Our lerp from rotation.</summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.timeOffScreen">
            <summary>How long this object has been off screen.</summary>
        </member>
        <member name="F:DAQRI.BodySpaceAbstractBehaviour.updateState">
            <summary>The method to run during <see cref="M:DAQRI.BodySpaceAbstractBehaviour.LateUpdate"/>.</summary>
        </member>
        <member name="P:DAQRI.BodySpaceAbstractBehaviour.TargetOffsetRotation">
            <summary>
            <para>
            The rotation of the device.
            Applying this rotation to the transform will put the body space content slightly to the left or right of the view center.
            The direction depends on the current bodyspace rotation.
            </para>
            <para>
            Regardless if the <see cref="T:DAQRI.ServiceManager"/> has, or has not received the devices
            orientation yet, it will use the <see cref="T:DAQRI.DisplayManager"/>'s transform instead for the
            end result is that it should be based on exactly where the cameras are at.
            </para>
            </summary>
        </member>
        <member name="P:DAQRI.BodySpaceAbstractBehaviour.TargetCenteredRotation">
            <summary>
            <para>
            The rotation of the device.
            Applying this rotation to the transform will put the body space content in the center of the view.
            </para>
            <para>
            Regardless if the <see cref="T:DAQRI.ServiceManager"/> has, or has not received the devices
            orientation yet, it will use the <see cref="T:DAQRI.DisplayManager"/>'s transform instead for the
            end result is that it should be based on exactly where the cameras are at.
            </para>
            </summary>
        </member>
        <member name="P:DAQRI.BodySpaceAbstractBehaviour.TargetPosition">
            <summary>
            <para>The device's positional data from the <see cref="T:DAQRI.ServiceManager"/>.</para>
            <para>
            Regardless if the <see cref="T:DAQRI.ServiceManager"/> has, or has not received the devices
            position yet, it will use the <see cref="T:DAQRI.DisplayManager"/>'s transform instead for the
            end result is that it should be based on exactly where the cameras are at.
            </para>
            </summary>
        </member>
        <member name="M:DAQRI.BodySpaceAbstractBehaviour.Recenter">
            <summary>This will instantly set the object to the device transform.</summary>
        </member>
        <member name="M:DAQRI.BodySpaceAbstractBehaviour.LateUpdate">
            <summary>The movement of this object should be done after the
            <see cref="T:DAQRI.ServiceManager"/> updates it's values, but before the render loop.</summary>
        </member>
        <member name="M:DAQRI.BodySpaceAbstractBehaviour.UpdateInitialization">
            <summary>
            Keeps the object off screen until the <see cref="T:DAQRI.ServiceManager"/> has the
            device's orientation.
            </summary>
        </member>
        <member name="M:DAQRI.BodySpaceAbstractBehaviour.UpdateCheckScreen">
            <summary>
            Checks to see if and how long the object is off screen and triggers an
            animation of it's rotation if needed.
            </summary>
        </member>
        <member name="M:DAQRI.BodySpaceAbstractBehaviour.UpdateAnimation">
            <summary>Rotates the object back in front of the device.</summary>
        </member>
        <member name="M:DAQRI.BodySpaceAbstractBehaviour.IsContentToRightOfViewport">
            <summary>
            Checks whether the center of the body space content is to the right of the viewport.
            </summary>
            <returns><c>true</c> if the content is to the right of the viewport; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:DAQRI.Events.ApplicationEventHandlerAbstractBehaviour">
            <summary>
            Implement this class to respond to application lifecycle events.
            </summary>
        </member>
        <member name="M:DAQRI.Events.ApplicationEventHandlerAbstractBehaviour.OnApplicationLoad">
            <summary>
            This method is called when the application is first loaded.
            </summary>
        </member>
        <member name="M:DAQRI.Events.ApplicationEventHandlerAbstractBehaviour.OnApplicationForeground">
            <summary>
            This method is called when the application enters the foreground.
            </summary>
        </member>
        <member name="M:DAQRI.Events.ApplicationEventHandlerAbstractBehaviour.OnApplicationBackground">
            <summary>
            This method is called when the application enters the background.
            </summary>
        </member>
        <member name="M:DAQRI.Events.ApplicationEventHandlerAbstractBehaviour.OnApplicationStop">
            <summary>
            This method is called when the application is terminated.
            </summary>
        </member>
        <member name="T:DAQRI.Events.IKeyboardInputEventHandler">
            <summary>
            Keyboard input event handler.
            </summary>
        </member>
        <member name="M:DAQRI.Events.IKeyboardInputEventHandler.OnKeyboardShowing(System.String)">
            <summary>
            Ons the keyboard showing.
            </summary>
            <param name="input">Input.</param>
        </member>
        <member name="M:DAQRI.Events.IKeyboardInputEventHandler.OnKeyboardError(System.String)">
            <summary>
            Ons the keyboard error.
            </summary>
            <param name="input">Input.</param>
        </member>
        <member name="M:DAQRI.Events.IKeyboardInputEventHandler.OnKeyboardInputRecieved(System.String)">
            <summary>
            Ons the keyboard input recieved.
            </summary>
            <param name="input">Input.</param>
        </member>
        <member name="M:DAQRI.Events.IKeyboardInputEventHandler.OnKeyboardInputCancelled(System.String)">
            <summary>
            Ons the keyboard input cancelled.
            </summary>
            <param name="input">Input.</param>
        </member>
        <member name="T:DAQRI.Events.KeyboardInputEventHandlerAbstractBehaviour">
            <summary>
            Keyboard input event handler abstract behaviour.
            </summary>
        </member>
        <member name="M:DAQRI.Events.KeyboardInputEventHandlerAbstractBehaviour.OnKeyboardShowing(System.String)">
            <summary>
            Ons the keyboard showing.
            </summary>
            <param name="input">Input.</param>
        </member>
        <member name="M:DAQRI.Events.KeyboardInputEventHandlerAbstractBehaviour.OnKeyboardError(System.String)">
            <summary>
            Ons the keyboard error.
            </summary>
            <param name="input">Input.</param>
        </member>
        <member name="M:DAQRI.Events.KeyboardInputEventHandlerAbstractBehaviour.OnKeyboardInputRecieved(System.String)">
            <summary>
            Ons the keyboard input recieved.
            </summary>
            <param name="input">Input.</param>
        </member>
        <member name="M:DAQRI.Events.KeyboardInputEventHandlerAbstractBehaviour.OnKeyboardInputCancelled(System.String)">
            <summary>
            Ons the keuboard input cancelled.
            </summary>
            <param name="input">Input.</param>
        </member>
        <member name="T:DAQRI.VideoMetaData">
            <summary>
            Video metadata.
            </summary>
        </member>
        <member name="F:DAQRI.VideoMetaData.width">
            <summary>
            Width of the media file.
            </summary>
        </member>
        <member name="F:DAQRI.VideoMetaData.height">
            <summary>
            Height of the media file.
            </summary>
        </member>
        <member name="F:DAQRI.VideoMetaData.duration">
            <summary>
            Duration of the media file.
            </summary>
        </member>
        <member name="F:DAQRI.VideoMetaData.fps">
            <summary>
            Frames per second of the media file.
            </summary>
        </member>
        <member name="F:DAQRI.VideoMetaData.isValid">
            <summary>
            Indicates whether the video is valid.
            </summary>
        </member>
        <member name="F:DAQRI.VideoMetaData.nativeHandle">
            <summary>
            native handle.
            </summary>
        </member>
        <member name="T:DAQRI.PovStreamerAbstraction">
            <summary>
            Pov (point of view) streamer is used to stream Unity app AR content with a color camera overlay to an external display.
            </summary>
        </member>
        <member name="T:DAQRI.DeprecatedPrefab">
            <summary>
            This is used to show when a prefab is deprecated in the Unity inspector.
            </summary>
        </member>
        <member name="F:DAQRI.DeprecatedPrefab.replacementPrefab">
            <summary>
            The recommended replacement prefab.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManagerEditor.ShowAdvancedContent">
            <summary>
            Draws all content from the 'Advanced' foldout
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManagerEditor.ValidateAndUpdateClipPlanesIfNeeded">
            <summary>
            If any clip plane field just finished being edited, validation is run.
            If the validation passes, the serialized object is updated with the field value.
            </summary>
        </member>
        <member name="M:DAQRI.DisplayManagerEditor.ValidateAndUpdateClipPlane(UnityEditor.SerializedProperty@,System.Single@)">
            <summary>
            Validates the clip planes.
            If all planes are valid, the serialized property is updated with the field value.
            If all planes are not valid, it is assumed that the one passed to this method caused the issue, 
            and the field value is reset to the value of the serialized property.
            </summary>
            <param name="clipPlaneProperty">Clip plane serialized property.</param>
            <param name="clipPlaneFieldValue">Clip plane field value.</param>
        </member>
        <member name="M:DAQRI.MonoNeedingParentCanvasEditor.OnEnable">
            <summary>
            Creates a parent canvas if needed.
            </summary>
        </member>
        <member name="M:DAQRI.MonoNeedingParentCanvasEditor.CreateCanvasIfNeeded">
            <summary>
            Creates a parent canvas if needed.
            </summary>
        </member>
        <member name="M:DAQRI.MonoNeedingParentCanvasEditor.NeedsCanvasGeneration(UnityEngine.MonoBehaviour)">
            <summary>
            Checks if an object needs a parent canvas generated.
            </summary>
            <returns><c>true</c>, if canvas generation is needed, <c>false</c> otherwise.</returns>
            <param name="targetMono">Object to run the check on.</param>
        </member>
        <member name="M:DAQRI.MonoNeedingParentCanvasEditor.IsCorrectTimeToRunCanvasCreation(UnityEngine.MonoBehaviour)">
            <summary>
            Determines whether canvas generation should be run at this moment, given the application and editor states.
            </summary>
            <returns><c>true</c> if is correct time to run canvas creation; otherwise, <c>false</c>.</returns>
            <param name="targetMono">Object to run the check on.</param>
        </member>
        <member name="M:DAQRI.MonoNeedingParentCanvasEditor.CreateParentCanvas(UnityEngine.MonoBehaviour)">
            <summary>
            Creates the parent canvas.
            </summary>
            <param name="targetMono">Object needing the parent canvas.</param>
        </member>
        <member name="M:DAQRI.SceneSingletonEditor`1.DrawValidEditorContent">
            <summary>
            Implement to draw custom valid editor content.
            </summary>
        </member>
        <member name="M:DAQRI.TargetFileDrawer.DoesStreamingAssetsFileExist(System.String)">
            <summary>Checks if the file exists in the streaming assets folder.</summary>
            <returns><c>true</c>, if file exists, <c>false</c> otherwise.</returns>
            <param name="path">The file path relative to the streaming assets directory.</param>
        </member>
        <member name="T:Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Properties.Resources.DSD">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.DSD1">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.OSX">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.OSX1">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.overlays_DSD">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.overlays_OSX">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.overlays_Windows">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.reticle_DSD">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.reticle_OSX">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.reticle_Windows">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.Windows">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Properties.Resources.Windows1">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="M:UnityEngine.Matrix4x4Extentions.FillWithFloats(UnityEngine.Matrix4x4,System.Single[])">
            <summary>Fills the matrix with float values. The values array MUST have a length of 16.</summary>
            <exception cref="T:System.ArgumentException">Expected 16 elements in values array</exception>
        </member>
        <member name="T:AppQuitAbstraction">
            <summary>
            Attach this script to UI element if you want the app to quit when reticle dwells on this UI.
            </summary>
        </member>
        <member name="M:AppQuitAbstraction.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Quits the application when a pointer click is received.
            </summary>
            <param name="eventData">Event data.</param>
        </member>
        <member name="M:AppQuitAbstraction.Update">
            <summary>
            At any instance, hitting 'esc' on the keyboard takes you out of the application.
            </summary>
        </member>
        <member name="M:AppQuitAbstraction.PerformQuit">
            <summary>
            Quits the app.
            </summary>
        </member>
    </members>
</doc>
